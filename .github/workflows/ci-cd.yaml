name: CI-CD

on:

  push:
    branches:
      - main

  pull_request:
    branches:
      - main


jobs:

  #----------------------------------------------------------------------------
  #       Continuous Integration (CI): Testing
  #----------------------------------------------------------------------------

  CI:

    runs-on: ubuntu-latest

    steps:

    - name: Set up python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Check out repository
      uses: actions/checkout@v2

    # install & configure poetry
    - name: Install Poetry
      uses: snok/install-poetry@v1 # v1.2.0
      with:
        version: 1.2.0a2
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    # load cached venv if cache exists
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    # install dependencies if cache does not exist
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --only default,lint,test,release --extras fit --extras viz

    # install your root project
    - name: Install library
      run: poetry install --with default,lint,test,release --extras fit --extras viz

    - name: Format with Black
      run: poetry run black .
